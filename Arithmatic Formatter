def arithmetic_arranger(problems, display_result=False):
    # Check if the number of problems is valid
    if len(problems) > 5:
        return "Error: Too many problems."

    # Initialize variables to store formatted strings for each line
    line1 = ""
    line2 = ""
    line3 = ""
    line4 = ""

    # Loop through each problem
    for problem in problems:
        # Split the problem into operands and operator
        operand1, operator, operand2 = problem.split()

        # Check if the operands are valid integers
        if not operand1.isdigit() or not operand2.isdigit():
            return "Error: Numbers must only contain digits."

        # Check if the operator is valid
        if operator not in ['+', '-']:
            return "Error: Operator must be '+' or '-'."

        # Calculate the result
        result = str(eval(problem))

        # Find the maximum length of operands
        width = max(len(operand1), len(operand2)) + 2

        # Build each line of the formatted output
        line1 += operand1.rjust(width) + '    '
        line2 += operator + operand2.rjust(width - 1) + '    '
        line3 += '-' * width + '    '
        line4 += result.rjust(width) + '    '

    # Combine the lines into the final formatted output
    arranged_problems = line1.rstrip() + '\n' + line2.rstrip() + '\n' + line3.rstrip()

    # Add the result line if display_result is True
    if display_result:
        arranged_problems += '\n' + line4.rstrip()

    return arranged_problems

# Example usage:
problems = ["32 + 698", "3801 - 2", "45 + 43", "123 + 49"]
formatted_problems = arithmetic_arranger(problems, display_result=True)
print(formatted_problems)
